{"version":3,"sources":["components/Form/index.js","components/ToDo/index.js","components/Button/index.js","components/FilterButtons/index.js","components/ToDos/index.js","components/CheckAllButton/index.js","components/ClearCheckedButton/index.js","components/CountUnCheckedToDos/index.js","components/App/index.js","index.js"],"names":["Form","onSubmit","useState","localStorage","getItem","value","setValue","useEffect","window","setItem","className","onChange","event","target","onKeyPress","e","key","placeholder","ToDo","deleteToDo","index","takeChekedProp","toDo","checked","setChecked","type","onClick","Button","name","FilterButtons","onClickAll","onClickUnCheked","onClickCheked","toDoList","length","ToDos","createGenerator","buttonChecked","buttonUnChecked","buttonValue","setButtonValue","start","generetor","defaultTodo","indexOf","next","filter","map","CheckAllButton","changeToDoList","ClearCheckedButton","some","el","changeClassName","ClearCheckedToDos","forEach","element","push","CountUnCheckedToDos","countUnCheckedToDos","setCountUnCheckedToDos","counter","App","JSON","parse","setToDoList","stringify","newToDoList","clearArr","slice","concat","checkedArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29986abd.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState(localStorage.getItem(\"value\") || \"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"value\", value);\n  }, [value]);\n\n  const takeValue = (event) => {\n    setValue(event.target.value);\n  };\n  const pressEnter = (e) => {\n    if (e.key === \"Enter\" && value) {\n      onSubmit(value);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <input\n      className=\"input\"\n      value={value}\n      onChange={takeValue}\n      onKeyPress={pressEnter}\n      placeholder=\"Enter your ToDos\"\n    />\n  );\n};\n\nexport default Form;\n","import { useState } from \"react\";\n\nconst ToDo = ({ deleteToDo, index, takeChekedProp, toDo }) => {\n  const [checked, setChecked] = useState(false);\n\n  const changeCheked = () => {\n    if (checked) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n    takeChekedProp(checked, index, toDo.value);\n  };\n\n  return (\n    <div>\n      <p>\n        <input\n          type=\"checkBox\"\n          onChange={changeCheked}\n          checked={!toDo.checked}\n        />\n        {toDo.value + \" \"}\n        <button\n          onClick={() => {\n            deleteToDo(index);\n          }}\n        >\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default ToDo;\n","const Button = ({ onClick, className, name }) => {\n  return (\n    <button onClick={onClick} className={className}>\n      {name}\n    </button>\n  );\n};\nexport default Button;\n","import Button from \"../Button\";\nimport \"./index.css\";\n\nconst FilterButtons = ({\n  onClickAll,\n  onClickUnCheked,\n  onClickCheked,\n  toDoList,\n}) => {\n  const className = () => {\n    if (!toDoList.length) return \"displayNone\";\n  };\n  return (\n    <div className={className()}>\n      <Button onClick={onClickCheked} name=\"checked\" />\n      <Button onClick={onClickUnCheked} name=\"unchecked\" />\n      <Button onClick={onClickAll} name=\"all\" />\n    </div>\n  );\n};\n\nexport default FilterButtons;\n","import { useState } from \"react\";\nimport ToDo from \"../ToDo/index\";\n\nimport FilterButtons from \"../FilterButtons\";\n\nconst ToDos = ({ toDoList, deleteToDo, takeChekedProp }) => {\n  const [buttonValue, setButtonValue] = useState({\n    buttonChecked: false,\n    buttonUnChecked: false,\n  });\n  const onClickCheked = () => {\n    setButtonValue({\n      buttonChecked: true,\n      buttonUnChecked: false,\n    });\n  };\n\n  const onClickUnCheked = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: true,\n    });\n  };\n\n  const onClickAll = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: false,\n    });\n  };\n\n  function* createGenerator(start) {\n    while (true) yield start++;\n  }\n  const generetor = createGenerator(1);\n  const defaultTodo = (toDo) => (\n    <ToDo\n      buttonChecked={buttonValue.buttonChecked}\n      key={generetor.next().value}\n      toDo={toDo}\n      index={toDoList.indexOf(toDo)}\n      deleteToDo={deleteToDo}\n      takeChekedProp={takeChekedProp}\n    />\n  );\n\n  const outputWithoutFilter = () => {\n    return toDoList.map((toDo) => defaultTodo(toDo));\n  };\n  const outputWithFilterUnChecked = () => {\n    return toDoList\n      .filter((toDo) => toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputWithFilterChecked = () => {\n    return toDoList\n      .filter((toDo) => !toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputToDos = () => {\n    if (buttonValue.buttonChecked) {\n      return outputWithFilterChecked();\n    }\n    if (buttonValue.buttonUnChecked) {\n      return outputWithFilterUnChecked();\n    } else {\n      return outputWithoutFilter();\n    }\n  };\n\n  return (\n    <div>\n      {outputToDos()}\n      <FilterButtons\n        onClickCheked={onClickCheked}\n        onClickUnCheked={onClickUnCheked}\n        onClickAll={onClickAll}\n        toDoList={toDoList}\n      />\n    </div>\n  );\n};\n\nexport default ToDos;\n","import Button from \"../Button\";\nimport \"./index.css\";\n\nconst CheckAllButton = ({ changeToDoList, toDoList }) => {\n  const className = () => {\n    if (!toDoList.length) return \"displayNone\";\n  };\n  return (\n    <Button\n      className={className()}\n      name=\"CheckAllButton\"\n      onClick={() =>\n        changeToDoList(\n          toDoList.map((toDo) => (toDo = { checked: false, value: toDo.value }))\n        )\n      }\n    />\n  );\n};\n\nexport default CheckAllButton;\n","import \"./index.css\";\nimport Button from \"../Button\";\n\nconst ClearCheckedButton = ({ toDoList, changeToDoList }) => {\n  const changeClassName = () => {\n    if (!toDoList.some((el) => !el.checked)) {\n      return \"buttonClearDisplay\";\n    }\n  };\n\n  const findIndexToDelete = () => {\n    const ClearCheckedToDos = [];\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        ClearCheckedToDos.push(element);\n      }\n    });\n    changeToDoList(ClearCheckedToDos);\n  };\n  return (\n    <Button\n      className={changeClassName()}\n      onClick={findIndexToDelete}\n      name=\"Clear checked\"\n    />\n  );\n};\nexport default ClearCheckedButton;\n","import { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nconst CountUnCheckedToDos = ({ toDoList }) => {\n  const [countUnCheckedToDos, setCountUnCheckedToDos] = useState(0);\n  useEffect(() => {\n    let counter = 0;\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        counter++;\n      }\n    });\n    setCountUnCheckedToDos(counter);\n  }, [toDoList]);\n  const className = () => {\n    if (!countUnCheckedToDos) {\n      return \"displayNone\";\n    }\n  };\n  return <p className={className()}>{countUnCheckedToDos} items left</p>;\n};\n\nexport default CountUnCheckedToDos;\n","import { useState, useEffect } from \"react\";\n\nimport Form from \"../Form/index\";\nimport ToDos from \"../ToDos/index\";\nimport CheckAllButton from \"../CheckAllButton/index\";\nimport ClearCheckedButton from \"../ClearCheckedButton/index\";\nimport CountUnCheckedToDos from \"../CountUnCheckedToDos\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [toDoList, setToDoList] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"toDolist\") || \"[]\");\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(\"toDoList\", JSON.stringify(toDoList));\n  }, [toDoList]);\n\n  const deleteToDo = (index) => {\n    const clearArr = toDoList.slice(0, index).concat(toDoList.slice(index + 1));\n    setToDoList([...clearArr]);\n  };\n\n  const onSubmit = (value) => {\n    setToDoList([{ value, checked: true }, ...toDoList]);\n  };\n\n  const takeChekedProp = (checked, index, value) => {\n    const checkedArr = toDoList\n      .slice(0, index)\n      .concat({ value, checked }, toDoList.slice(index + 1));\n    setToDoList(checkedArr);\n  };\n\n  const changeToDoList = (newToDoList) => {\n    setToDoList(newToDoList);\n  };\n\n  return (\n    <>\n      <CheckAllButton changeToDoList={changeToDoList} toDoList={toDoList} />\n      <Form onSubmit={onSubmit} />\n      <ToDos\n        toDoList={toDoList}\n        deleteToDo={deleteToDo}\n        takeChekedProp={takeChekedProp}\n      />\n      <CountUnCheckedToDos toDoList={toDoList} />\n      <ClearCheckedButton toDoList={toDoList} changeToDoList={changeToDoList} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}