{"version":3,"sources":["components/Form/index.js","components/ToDo/index.js","components/Button/index.js","components/ToDos/index.js","components/CheckAllButton/index.js","components/ClearCheckedButton/index.js","components/App/index.js","index.js"],"names":["Form","onSubmit","useState","localStorage","getItem","value","setValue","useEffect","window","setItem","onChange","event","target","onKeyPress","e","key","placeholder","ToDo","deleteToDo","index","takeChekedProp","toDo","checked","setChecked","type","onClick","Button","className","name","ToDos","createGenerator","toDoList","buttonChecked","buttonUnChecked","buttonValue","setButtonValue","start","generetor","defaultTodo","indexOf","next","filter","map","CheckAllButton","changeToDoList","ClearCheckedButton","some","el","changeClassName","ClearCheckedToDos","forEach","element","push","App","JSON","parse","setToDoList","stringify","newToDoList","length","clearArr","slice","concat","checkedArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b60488b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState(localStorage.getItem(\"value\") || \"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"value\", value);\n  }, [value]);\n\n  const takeValue = (event) => {\n    setValue(event.target.value);\n  };\n  const pressEnter = (e) => {\n    if (e.key === \"Enter\" && value) {\n      onSubmit(value);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <input\n      value={value}\n      onChange={takeValue}\n      onKeyPress={pressEnter}\n      placeholder=\"Enter your ToDos\"\n    />\n  );\n};\n\nexport default Form;\n","import { useState } from \"react\";\n\nconst ToDo = ({ deleteToDo, index, takeChekedProp, toDo }) => {\n  const [checked, setChecked] = useState(false);\n\n  const changeCheked = () => {\n    if (checked) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n    takeChekedProp(checked, index, toDo.value);\n  };\n\n  return (\n    <div>\n      <p>\n        <input\n          type=\"checkBox\"\n          onChange={changeCheked}\n          checked={!toDo.checked}\n        />\n        {toDo.value + \" \"}\n        <button\n          onClick={() => {\n            deleteToDo(index);\n          }}\n        >\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default ToDo;\n","const Button = ({ onClick, className, name }) => {\n  return (\n    <button onClick={onClick} className={className}>\n      {name}\n    </button>\n  );\n};\nexport default Button;\n","import { useState } from \"react\";\nimport ToDo from \"../ToDo/index\";\nimport Button from \"../Button\";\n\nconst ToDos = ({ toDoList, deleteToDo, takeChekedProp }) => {\n  const [buttonValue, setButtonValue] = useState({\n    buttonChecked: false,\n    buttonUnChecked: false,\n  });\n  const onClickCheked = () => {\n    setButtonValue({\n      buttonChecked: true,\n      buttonUnChecked: false,\n    });\n  };\n\n  const onClickUnCheked = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: true,\n    });\n  };\n\n  const onClickAll = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: false,\n    });\n  };\n\n  function* createGenerator(start) {\n    while (true) yield start++;\n  }\n  const generetor = createGenerator(1);\n  const defaultTodo = (toDo) => (\n    <ToDo\n      buttonChecked={buttonValue.buttonChecked}\n      key={generetor.next().value}\n      toDo={toDo}\n      index={toDoList.indexOf(toDo)}\n      deleteToDo={deleteToDo}\n      takeChekedProp={takeChekedProp}\n    />\n  );\n\n  const outputWithoutFilter = () => {\n    return toDoList.map((toDo) => defaultTodo(toDo));\n  };\n  const outputWithFilterUnChecked = () => {\n    return toDoList\n      .filter((toDo) => toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputWithFilterChecked = () => {\n    return toDoList\n      .filter((toDo) => !toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputToDos = () => {\n    if (buttonValue.buttonChecked) {\n      return outputWithFilterChecked();\n    }\n    if (buttonValue.buttonUnChecked) {\n      return outputWithFilterUnChecked();\n    } else {\n      return outputWithoutFilter();\n    }\n  };\n\n  return (\n    <div>\n      {outputToDos()}\n      <Button onClick={onClickCheked} name=\"checked\" />\n      <Button onClick={onClickUnCheked} name=\"unchecked\" />\n      <Button onClick={onClickAll} name=\"all\" />\n    </div>\n  );\n};\n\nexport default ToDos;\n","import Button from \"../Button\";\n\nconst CheckAllButton = ({ changeToDoList, toDoList }) => {\n  return (\n    <Button\n      name=\"CheckAllButton\"\n      onClick={() =>\n        changeToDoList(\n          toDoList.map((toDo) => (toDo = { checked: false, value: toDo.value }))\n        )\n      }\n    />\n  );\n};\n\nexport default CheckAllButton;\n","import \"./index.css\";\nimport Button from \"../Button\";\n\nconst ClearCheckedButton = ({ toDoList, changeToDoList }) => {\n  const changeClassName = () => {\n    if (!toDoList.some((el) => !el.checked)) {\n      return \"buttonClearDisplay\";\n    }\n  };\n\n  const findIndexToDelete = () => {\n    const ClearCheckedToDos = [];\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        ClearCheckedToDos.push(element);\n      }\n    });\n    changeToDoList(ClearCheckedToDos);\n  };\n  return (\n    <Button\n      className={changeClassName()}\n      onClick={findIndexToDelete}\n      name=\"Clear checked\"\n    />\n  );\n};\nexport default ClearCheckedButton;\n","import { useState, useEffect } from \"react\";\nimport Form from \"../Form/index\";\nimport ToDos from \"../ToDos/index\";\nimport CheckAllButton from \"../CheckAllButton/index\";\nimport ClearCheckedButton from \"../ClearCheckedButton/index\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [toDoList, setToDoList] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"toDolist\")) || [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(\"toDoList\", JSON.stringify(toDoList));\n  }, [toDoList]);\n\n  const deleteToDo = (index) => {\n    if (toDoList.length === 1) {\n      setToDoList([]);\n    } else {\n      const clearArr = toDoList\n        .slice(0, index)\n        .concat(toDoList.slice(index + 1));\n\n      setToDoList([...clearArr]);\n    }\n  };\n  const onSubmit = (value) => {\n    setToDoList([{ value, checked: true }, ...toDoList]);\n  };\n\n  const takeChekedProp = (checked, index, value) => {\n    const checkedArr = toDoList\n      .slice(0, index)\n      .concat({ value, checked }, toDoList.slice(index + 1));\n    setToDoList(checkedArr);\n  };\n\n  const changeToDoList = (newToDoList) => {\n    setToDoList(newToDoList);\n  };\n\n  return (\n    <>\n      <CheckAllButton changeToDoList={changeToDoList} toDoList={toDoList} />\n\n      <Form onSubmit={onSubmit} />\n      <ToDos\n        toDoList={toDoList}\n        deleteToDo={deleteToDo}\n        takeChekedProp={takeChekedProp}\n      />\n      <ClearCheckedButton toDoList={toDoList} changeToDoList={changeToDoList} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}