{"version":3,"sources":["components/Form/index.js","components/Button/index.js","components/ToDo/index.js","components/ToDos/index.js","components/CheckAllButton/index.js","components/ClearCheckedButton/index.js","components/CountUnCheckedToDos/index.js","components/FilterButtons/index.js","components/App/index.js","index.js"],"names":["Form","onSubmit","useState","localStorage","getItem","value","setValue","useEffect","window","setItem","className","onChange","event","target","onKeyPress","e","key","placeholder","Button","onClick","name","ToDo","deleteToDo","index","takeChekedProp","toDo","checked","setChecked","style","cursor","type","class","ToDos","createGenerator","buttonValue","toDoList","start","generetor","defaultTodo","buttonChecked","indexOf","next","filter","map","buttonUnChecked","CheckAllButton","changeToDoList","length","ClearCheckedButton","changeClassName","some","el","ClearCheckedToDos","forEach","element","push","CountUnCheckedToDos","countUnCheckedToDos","setCountUnCheckedToDos","counter","FilterButtons","onClickAll","onClickUnCheked","onClickCheked","App","setToDoList","setButtonValue","getLocalStorage","savelocalStorage","JSON","stringify","todoLocal","parse","newToDoList","clearArr","slice","concat","checkedArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7293f138.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState(localStorage.getItem(\"value\") || \"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"value\", value);\n  }, [value]);\n\n  const takeValue = (event) => {\n    setValue(event.target.value);\n  };\n  const pressEnter = (e) => {\n    if (e.key === \"Enter\" && value) {\n      onSubmit(value);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <input\n      className=\"input\"\n      value={value}\n      onChange={takeValue}\n      onKeyPress={pressEnter}\n      placeholder=\"Enter your ToDos\"\n    />\n  );\n};\n\nexport default Form;\n","import \"./index.css\";\n\nconst Button = ({ onClick, className, name }) => {\n  return (\n    <button onClick={onClick} className={`btn ${className}`}>\n      {name}\n    </button>\n  );\n};\nexport default Button;\n","import { useState } from \"react\";\nimport Button from \"../Button\";\nimport \"./index.css\";\n\nconst ToDo = ({ deleteToDo, index, takeChekedProp, toDo }) => {\n  const [checked, setChecked] = useState(false);\n\n  const changeCheked = () => {\n    if (checked) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n    takeChekedProp(checked, index, toDo.value);\n  };\n\n  return (\n    <div className=\"outputToDo\">\n      <div>\n        <input\n          style={{ cursor: \"pointer\" }}\n          type=\"checkBox\"\n          onChange={changeCheked}\n          checked={!toDo.checked}\n        />\n        <p class=\"toDoValue\">{toDo.value + \" \"}</p>\n      </div>\n      <Button\n        onClick={() => {\n          deleteToDo(index);\n        }}\n        name=\"Delete\"\n      />\n    </div>\n  );\n};\n\nexport default ToDo;\n","import ToDo from \"../ToDo/index\";\nimport \"./index.css\";\n\nconst ToDos = ({ buttonValue, toDoList, deleteToDo, takeChekedProp }) => {\n  function* createGenerator(start) {\n    while (true) yield start++;\n  }\n  const generetor = createGenerator(1);\n  const defaultTodo = (toDo) => (\n    <ToDo\n      buttonChecked={buttonValue.buttonChecked}\n      key={generetor.next().value}\n      toDo={toDo}\n      index={toDoList.indexOf(toDo)}\n      deleteToDo={deleteToDo}\n      takeChekedProp={takeChekedProp}\n    />\n  );\n\n  const outputWithoutFilter = () => {\n    return toDoList.map((toDo) => defaultTodo(toDo));\n  };\n  const outputWithFilterUnChecked = () => {\n    return toDoList\n      .filter((toDo) => toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputWithFilterChecked = () => {\n    return toDoList\n      .filter((toDo) => !toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputToDos = () => {\n    if (buttonValue.buttonChecked) {\n      return outputWithFilterChecked();\n    }\n    if (buttonValue.buttonUnChecked) {\n      return outputWithFilterUnChecked();\n    } else {\n      return outputWithoutFilter();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"outputToDos\">{outputToDos()}</div>\n    </>\n  );\n};\n\nexport default ToDos;\n","import Button from \"../Button\";\nimport \"./index.css\";\n\nconst CheckAllButton = ({ changeToDoList, toDoList }) => {\n  const className = () => {\n    if (!toDoList.length) return \"displayNone\";\n  };\n  return (\n    <Button\n      className={`btnAll ${className()}`}\n      name=\"CheckAllButton\"\n      onClick={() =>\n        changeToDoList(\n          toDoList.map((toDo) => (toDo = { checked: false, value: toDo.value }))\n        )\n      }\n    />\n  );\n};\n\nexport default CheckAllButton;\n","import \"./index.css\";\nimport Button from \"../Button\";\n\nconst ClearCheckedButton = ({ toDoList, changeToDoList }) => {\n  const changeClassName = () => {\n    if (!toDoList.some((el) => !el.checked)) {\n      return \"buttonClearDisplay\";\n    }\n  };\n\n  const findIndexToDelete = () => {\n    const ClearCheckedToDos = [];\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        ClearCheckedToDos.push(element);\n      }\n    });\n    changeToDoList(ClearCheckedToDos);\n  };\n  return (\n    <Button\n      className={`${changeClassName() ? changeClassName() : \"\"} buttonClear`}\n      onClick={findIndexToDelete}\n      name=\"Clear checked\"\n    />\n  );\n};\nexport default ClearCheckedButton;\n","import { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nconst CountUnCheckedToDos = ({ toDoList }) => {\n  const [countUnCheckedToDos, setCountUnCheckedToDos] = useState(0);\n  useEffect(() => {\n    let counter = 0;\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        counter++;\n      }\n    });\n    setCountUnCheckedToDos(counter);\n  }, [toDoList]);\n  const className = () => {\n    if (!countUnCheckedToDos) {\n      return \"displayNone\";\n    }\n  };\n  return <p className={className()}>{countUnCheckedToDos} items left</p>;\n};\n\nexport default CountUnCheckedToDos;\n","import Button from \"../Button\";\nimport \"./index.css\";\n\nconst FilterButtons = ({\n  onClickAll,\n  onClickUnCheked,\n  onClickCheked,\n  toDoList,\n}) => {\n  const className = () => {\n    if (!toDoList.length) return \"displayNone\";\n  };\n  return (\n    <div className={className()}>\n      <Button onClick={onClickCheked} name=\"checked\" />\n      <Button onClick={onClickUnCheked} name=\"unchecked\" />\n      <Button onClick={onClickAll} name=\"all\" />\n    </div>\n  );\n};\n\nexport default FilterButtons;\n","import { useState, useEffect } from \"react\";\n\nimport Form from \"../Form/index\";\nimport ToDos from \"../ToDos/index\";\nimport CheckAllButton from \"../CheckAllButton/index\";\nimport ClearCheckedButton from \"../ClearCheckedButton/index\";\nimport CountUnCheckedToDos from \"../CountUnCheckedToDos\";\nimport FilterButtons from \"../FilterButtons\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [toDoList, setToDoList] = useState([]);\n  const [buttonValue, setButtonValue] = useState({\n    buttonChecked: false,\n    buttonUnChecked: false,\n  });\n  const onClickCheked = () => {\n    setButtonValue({\n      buttonChecked: true,\n      buttonUnChecked: false,\n    });\n  };\n\n  const onClickUnCheked = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: true,\n    });\n  };\n\n  const onClickAll = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: false,\n    });\n  };\n\n  useEffect(() => {\n    getLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    savelocalStorage();\n  });\n\n  const savelocalStorage = () => {\n    localStorage.setItem(\"toDoList\", JSON.stringify(toDoList));\n  };\n  const getLocalStorage = () => {\n    if (localStorage.getItem(\"toDoList\") === null) {\n      localStorage.setItem(\"toDoList\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"toDoList\"));\n      setToDoList(todoLocal);\n    }\n  };\n  const deleteToDo = (index) => {\n    const clearArr = toDoList.slice(0, index).concat(toDoList.slice(index + 1));\n    setToDoList([...clearArr]);\n  };\n\n  const onSubmit = (value) => {\n    setToDoList([{ value, checked: true }, ...toDoList]);\n  };\n\n  const takeChekedProp = (checked, index, value) => {\n    const checkedArr = toDoList\n      .slice(0, index)\n      .concat({ value, checked }, toDoList.slice(index + 1));\n    setToDoList(checkedArr);\n  };\n\n  const changeToDoList = (newToDoList) => {\n    setToDoList(newToDoList);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"form\">\n        <CheckAllButton changeToDoList={changeToDoList} toDoList={toDoList} />\n        <Form onSubmit={onSubmit} />\n      </div>\n      <ToDos\n        toDoList={toDoList}\n        deleteToDo={deleteToDo}\n        takeChekedProp={takeChekedProp}\n        buttonValue={buttonValue}\n      />\n\n      <div className=\"footer\">\n        <FilterButtons\n          className=\"buttonsFilterPosition \"\n          onClickCheked={onClickCheked}\n          onClickUnCheked={onClickUnCheked}\n          onClickAll={onClickAll}\n          toDoList={toDoList}\n        />\n\n        <CountUnCheckedToDos toDoList={toDoList} />\n        <ClearCheckedButton\n          toDoList={toDoList}\n          changeToDoList={changeToDoList}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}