{"version":3,"sources":["components/Form/index.js","components/Button/index.js","components/ToDo/index.js","components/ToDos/index.js","components/CheckAllButton/index.js","components/ClearCheckedButton/index.js","components/CountUnCheckedToDos/index.js","components/FilterButtons/index.js","components/App/index.js","index.js"],"names":["Form","onSubmit","useState","localStorage","getItem","value","setValue","useEffect","window","setItem","className","onChange","event","target","onKeyPress","e","key","placeholder","Button","onClick","name","ToDo","deleteToDo","index","takeChekedProp","toDo","checked","setChecked","style","cursor","type","ToDos","buttonValue","toDoList","defaultTodo","buttonChecked","indexOf","id","filter","map","buttonUnChecked","CheckAllButton","changeToDoList","length","ClearCheckedButton","changeClassName","some","el","ClearCheckedToDos","forEach","element","push","CountUnCheckedToDos","countUnCheckedToDos","setCountUnCheckedToDos","counter","FilterButtons","onClickAll","onClickUnCheked","onClickCheked","App","setToDoList","setButtonValue","getLocalStorage","savelocalStorage","JSON","stringify","todoLocal","parse","newToDoList","uuid","clearArr","slice","concat","checkedArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc7ec7cb.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState(localStorage.getItem(\"value\") || \"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"value\", value);\n  }, [value]);\n\n  const takeValue = (event) => {\n    setValue(event.target.value);\n  };\n  const pressEnter = (e) => {\n    if (e.key === \"Enter\" && value) {\n      onSubmit(value);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <input\n      className=\"input\"\n      value={value}\n      onChange={takeValue}\n      onKeyPress={pressEnter}\n      placeholder=\"Enter your ToDos\"\n    />\n  );\n};\n\nexport default Form;\n","import \"./index.css\";\n\nconst Button = ({ onClick, className, name }) => {\n  return (\n    <button onClick={onClick} className={`btn ${className}`}>\n      {name}\n    </button>\n  );\n};\nexport default Button;\n","import { useState } from \"react\";\nimport Button from \"../Button\";\nimport \"./index.css\";\n\nconst ToDo = ({ deleteToDo, index, takeChekedProp, toDo }) => {\n  const [checked, setChecked] = useState(false);\n\n  const changeCheked = () => {\n    if (checked) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n    takeChekedProp(checked, index, toDo);\n  };\n\n  return (\n    <div className=\"outputToDo\">\n      <div>\n        <input\n          style={{ cursor: \"pointer\" }}\n          type=\"checkBox\"\n          onChange={changeCheked}\n          checked={!toDo.checked}\n        />\n        <p className=\"toDoValue\">{toDo.value + \" \"}</p>\n      </div>\n      <Button\n        onClick={() => {\n          deleteToDo(index);\n        }}\n        name=\"Delete\"\n      />\n    </div>\n  );\n};\n\nexport default ToDo;\n","import ToDo from \"../ToDo/index\";\nimport \"./index.css\";\n\nconst ToDos = ({ buttonValue, toDoList, deleteToDo, takeChekedProp }) => {\n  const defaultTodo = (toDo) => (\n    <ToDo\n      buttonChecked={buttonValue.buttonChecked}\n      key={toDo.id}\n      toDo={toDo}\n      index={toDoList.indexOf(toDo)}\n      deleteToDo={deleteToDo}\n      takeChekedProp={takeChekedProp}\n    />\n  );\n\n  const outputWithoutFilter = () => {\n    return toDoList.map((toDo) => defaultTodo(toDo));\n  };\n  const outputWithFilterUnChecked = () => {\n    return toDoList\n      .filter((toDo) => toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputWithFilterChecked = () => {\n    return toDoList\n      .filter((toDo) => !toDo.checked)\n      .map((toDo) => defaultTodo(toDo));\n  };\n\n  const outputToDos = () => {\n    if (buttonValue.buttonChecked) {\n      return outputWithFilterChecked();\n    }\n    if (buttonValue.buttonUnChecked) {\n      return outputWithFilterUnChecked();\n    } else {\n      return outputWithoutFilter();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"outputToDos\">{outputToDos()}</div>\n    </>\n  );\n};\n\nexport default ToDos;\n","import Button from \"../Button\";\nimport \"./index.css\";\n\nconst CheckAllButton = ({ changeToDoList, toDoList }) => {\n  const className = () => {\n    if (!toDoList.length) return \"displayNone\";\n  };\n  return (\n    <Button\n      className={`btnAll ${className()}`}\n      name=\"CheckAllButton\"\n      onClick={() =>\n        changeToDoList(\n          toDoList.map((toDo) => (toDo = { checked: false, value: toDo.value }))\n        )\n      }\n    />\n  );\n};\n\nexport default CheckAllButton;\n","import \"./index.css\";\nimport Button from \"../Button\";\n\nconst ClearCheckedButton = ({ toDoList, changeToDoList }) => {\n  const changeClassName = () => {\n    if (!toDoList.some((el) => !el.checked)) {\n      return \"buttonClearDisplay\";\n    }\n  };\n\n  const findIndexToDelete = () => {\n    const ClearCheckedToDos = [];\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        ClearCheckedToDos.push(element);\n      }\n    });\n    changeToDoList(ClearCheckedToDos);\n  };\n  return (\n    <Button\n      className={`${changeClassName() ? changeClassName() : \"\"} buttonClear`}\n      onClick={findIndexToDelete}\n      name=\"Clear checked\"\n    />\n  );\n};\nexport default ClearCheckedButton;\n","import { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nconst CountUnCheckedToDos = ({ toDoList }) => {\n  const [countUnCheckedToDos, setCountUnCheckedToDos] = useState(0);\n  useEffect(() => {\n    let counter = 0;\n    toDoList.forEach((element) => {\n      if (element.checked) {\n        counter++;\n      }\n    });\n    setCountUnCheckedToDos(counter);\n  }, [toDoList]);\n  const className = () => {\n    if (!countUnCheckedToDos) {\n      return \"displayNone\";\n    }\n  };\n  return <p className={className()}>{countUnCheckedToDos} items left</p>;\n};\n\nexport default CountUnCheckedToDos;\n","import Button from \"../Button\";\nimport \"./index.css\";\n\nconst FilterButtons = ({\n  onClickAll,\n  onClickUnCheked,\n  onClickCheked,\n  toDoList,\n}) => {\n  const className = () => {\n    if (!toDoList.length) return \"displayNone\";\n  };\n  return (\n    <div className={className()}>\n      <Button onClick={onClickCheked} name=\"checked\" />\n      <Button onClick={onClickUnCheked} name=\"unchecked\" />\n      <Button onClick={onClickAll} name=\"all\" />\n    </div>\n  );\n};\n\nexport default FilterButtons;\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport Form from \"../Form/index\";\nimport ToDos from \"../ToDos/index\";\nimport CheckAllButton from \"../CheckAllButton/index\";\nimport ClearCheckedButton from \"../ClearCheckedButton/index\";\nimport CountUnCheckedToDos from \"../CountUnCheckedToDos\";\nimport FilterButtons from \"../FilterButtons\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [toDoList, setToDoList] = useState([]);\n  const [buttonValue, setButtonValue] = useState({\n    buttonChecked: false,\n    buttonUnChecked: false,\n  });\n  const onClickCheked = () => {\n    setButtonValue({\n      buttonChecked: true,\n      buttonUnChecked: false,\n    });\n  };\n\n  const onClickUnCheked = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: true,\n    });\n  };\n\n  const onClickAll = () => {\n    setButtonValue({\n      buttonChecked: false,\n      buttonUnChecked: false,\n    });\n  };\n\n  useEffect(() => {\n    getLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    savelocalStorage();\n  });\n\n  const savelocalStorage = () => {\n    localStorage.setItem(\"toDoList\", JSON.stringify(toDoList));\n  };\n  const getLocalStorage = () => {\n    if (localStorage.getItem(\"toDoList\") === null) {\n      localStorage.setItem(\"toDoList\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"toDoList\"));\n      setToDoList(todoLocal);\n    }\n  };\n  const deleteToDo = (index) => {\n    const clearArr = toDoList.slice(0, index).concat(toDoList.slice(index + 1));\n    setToDoList([...clearArr]);\n  };\n\n  const onSubmit = (value) => {\n    setToDoList([{ value, id: uuid(), checked: true }, ...toDoList]);\n  };\n\n  const takeChekedProp = (checked, index, toDo) => {\n    const checkedArr = toDoList\n      .slice(0, index)\n      .concat(\n        { value: toDo.value, id: toDo.id, checked },\n        toDoList.slice(index + 1)\n      );\n    setToDoList(checkedArr);\n  };\n\n  const changeToDoList = (newToDoList) => {\n    setToDoList(newToDoList);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"form\">\n        <CheckAllButton changeToDoList={changeToDoList} toDoList={toDoList} />\n        <Form onSubmit={onSubmit} />\n      </div>\n      <ToDos\n        toDoList={toDoList}\n        deleteToDo={deleteToDo}\n        takeChekedProp={takeChekedProp}\n        buttonValue={buttonValue}\n      />\n\n      <div className=\"footer\">\n        <FilterButtons\n          className=\"buttonsFilterPosition \"\n          onClickCheked={onClickCheked}\n          onClickUnCheked={onClickUnCheked}\n          onClickAll={onClickAll}\n          toDoList={toDoList}\n        />\n\n        <CountUnCheckedToDos toDoList={toDoList} />\n        <ClearCheckedButton\n          toDoList={toDoList}\n          changeToDoList={changeToDoList}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}